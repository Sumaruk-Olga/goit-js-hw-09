{"mappings":"iiBAAA,IAsEQA,EADEC,EArEVC,EAAAC,EAAA,SAEMC,EAAsB,4BAEtBC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAKH,SAASC,cAAc,sBAC5BG,OAAOJ,SAASC,cAAc,yBA6EhC,SAASI,EAAcC,EAAUJ,GAC/B,IAAMK,EAAgBC,KAAKC,SAAW,GAChCC,EAAS,CAAEJ,SAAAA,EAAUJ,MAAAA,GAC3B,OAAO,IAAIS,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLP,EACJK,EAAQF,GAERG,EAAOH,KAENR,OA1BGR,EAAYqB,aAAaC,QAAQnB,KAInCJ,EAAkBwB,KAAKC,MAAMxB,GAEjCI,EAAKI,MAAMiB,MAAQ1B,EAAgBS,OAAS,GAC5CJ,EAAKK,KAAKgB,MAAQ1B,EAAgBU,MAAQ,GAC1CL,EAAKM,OAAOe,MAAQ1B,EAAgBW,QAAU,IAE1CX,EAAkB,GAlE1BK,EAAKC,KAAKqB,iBAAiB,UAI3B,SAAsBC,GAItB,GAFEA,EAAMC,iBAEiB,KAArBxB,EAAKI,MAAMiB,OAAkC,KAAlBrB,EAAKK,KAAKgB,OAAkC,KAApBrB,EAAKM,OAAOe,MAE3D,YADAI,MAAM,8BAWZ,IAPA,IAAM7B,EAAYqB,aAAaC,QAAQnB,GACjCJ,EAAkBwB,KAAKC,MAAMxB,GAE7B8B,EAAQC,OAAOhC,EAAgBS,OAC/BC,EAAOsB,OAAOhC,EAAgBU,MAC9BC,EAASqB,OAAOhC,EAAgBW,QAE7BsB,EAAI,EAAGA,GAAItB,EAAQsB,GAAK,EAE/BrB,EAAcqB,EAAIF,EAAQE,EAAEvB,GAAOwB,MAAK,SAAAC,OAAGtB,EAAQsB,EAARtB,SAAUJ,EAAK0B,EAAL1B,MACjD2B,EAAAlC,GAASmC,OAAOC,QAAS,qBAAmCC,OAAf1B,EAAS,QAAY0B,OAAN9B,EAAM,UACrE+B,OAAM,SAAAL,OAAGtB,EAAQsB,EAARtB,SAAUJ,EAAK0B,EAAL1B,MACpB2B,EAAAlC,GAASmC,OAAOI,QAAS,oBAAkCF,OAAf1B,EAAS,QAAY0B,OAAN9B,EAAM,UAKjEa,aAAaoB,WAAWtC,GACxBC,EAAKC,KAAKqC,WA9BdtC,EAAKC,KAAKqB,iBAAiB,SAkC3B,SAAuBC,GACrB,IACM5B,EADAC,EAAYqB,aAAaC,QAAQnB,GAIjCJ,EADAC,EACkBuB,KAAKC,MAAMxB,GAGX,GAGxBD,EAAgB4B,EAAMgB,OAAOC,MAAQjB,EAAMgB,OAAOlB,MAElDrB,EAAKI,MAAMiB,MAAQ1B,EAAgBS,OAAS,GAC5CJ,EAAKK,KAAKgB,MAAQ1B,EAAgBU,MAAQ,GAC1CL,EAAKM,OAAOe,MAAQ1B,EAAgBW,QAAU,GAE9CW,aAAawB,QAAQ1C,EAAqBoB,KAAKuB,UAAU/C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst KEY_TO_LOCALSTORAGE = \"form-data-create-promises\";\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step:document.querySelector('input[name=\"step\"]'),\n  amount:document.querySelector('input[name=\"amount\"]'),\n};\n\ninitPage();\n\nrefs.form.addEventListener('submit', onFormSubmit);\nrefs.form.addEventListener('input', onInputChange);\n\n\nfunction onFormSubmit(event) {\n\n  event.preventDefault();\n\nif (refs.delay.value === \"\" || refs.step.value===\"\" || refs.amount.value===\"\") {\n        alert('Please fill in all fields!');\n        return;\n    };\n\n  const savedData = localStorage.getItem(KEY_TO_LOCALSTORAGE);\n  const parsedSavedData = JSON.parse(savedData);\n    // console.log('savedData', savedData);\n  const delay = Number(parsedSavedData.delay);\n  const step = Number(parsedSavedData.step);\n  const amount = Number(parsedSavedData.amount);\n\n  for (let i = 1; i <=amount; i += 1){  \n    \n    createPromise(i, (delay + i*step)).then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);    \n  }).catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);    \n  });   \n    \n  }\n   \n    localStorage.removeItem(KEY_TO_LOCALSTORAGE);\n    refs.form.reset();    \n}\n\n\nfunction onInputChange(event) {\n  const savedData = localStorage.getItem(KEY_TO_LOCALSTORAGE);\n    let parsedSavedData;\n    // console.log('savedData', savedData);\n    if (savedData) {\n        parsedSavedData = JSON.parse(savedData);\n        \n    } else {\n        parsedSavedData = {};\n    }\n    \n  parsedSavedData[event.target.name] = event.target.value;\n\n  refs.delay.value = parsedSavedData.delay || \"\";\n  refs.step.value = parsedSavedData.step || \"\";\n  refs.amount.value = parsedSavedData.amount || \"\";\n     \n  localStorage.setItem(KEY_TO_LOCALSTORAGE, JSON.stringify(parsedSavedData));\n}\n\nfunction initPage() {\n    const savedData = localStorage.getItem(KEY_TO_LOCALSTORAGE);\n    let parsedSavedData;\n    // console.log('savedData', savedData);\n    if (savedData) {\n        parsedSavedData = JSON.parse(savedData);        \n   \n    refs.delay.value = parsedSavedData.delay || \"\";\n    refs.step.value = parsedSavedData.step || \"\";\n    refs.amount.value = parsedSavedData.amount || \"\";\n    } else {\n        parsedSavedData = {};\n    }\n    // console.log('parsedSavedData', parsedSavedData);\n}\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const result = { position, delay };\n  return new Promise((resolve, reject) => { \n    setTimeout(() => { \n      if (shouldResolve) {\n      resolve(result);\n    } else {\n      reject(result);\n    }\n    }, delay);\n  });\n\n}\n\n\n"],"names":["parsedSavedData","savedData","$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$KEY_TO_LOCALSTORAGE","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","shouldResolve","Math","random","result","Promise","resolve","reject","setTimeout","localStorage","getItem","JSON","parse","value","addEventListener","event","preventDefault","alert","delay1","Number","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","removeItem","reset","target","name","setItem","stringify"],"version":3,"file":"03-promises.f3ebd445.js.map"}